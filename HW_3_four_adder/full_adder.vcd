$date
	Thu Nov 26 01:15:32 2020
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module t_HW_4 $end
$var wire 4 ! out_cout [3:0] $end
$var wire 1 " Cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$scope module adder $end
$var wire 4 % A [3:0] $end
$var wire 4 & B [3:0] $end
$var wire 1 ' Cin $end
$var wire 1 " Cout $end
$var wire 4 ( sum [3:0] $end
$scope module a1 $end
$var wire 1 ) A $end
$var wire 1 * B $end
$var wire 1 ' Cin $end
$var wire 1 + Cout $end
$var wire 1 , sum $end
$upscope $end
$scope module a2 $end
$var wire 1 - A $end
$var wire 1 . B $end
$var wire 1 + Cin $end
$var wire 1 / Cout $end
$var wire 1 0 sum $end
$upscope $end
$scope module a3 $end
$var wire 1 1 A $end
$var wire 1 2 B $end
$var wire 1 / Cin $end
$var wire 1 3 Cout $end
$var wire 1 4 sum $end
$upscope $end
$scope module a4 $end
$var wire 1 5 A $end
$var wire 1 6 B $end
$var wire 1 3 Cin $end
$var wire 1 7 Cout $end
$var wire 1 8 sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
18
07
16
05
14
03
02
01
10
1/
1.
1-
0,
1+
1*
1)
b1110 (
0'
b1011 &
b11 %
b1011 $
b11 #
0"
b1110 !
$end
#5000
1"
17
08
13
00
1/
b0 !
b0 (
04
0-
11
b101 #
b101 %
#10000
0/
10
04
b11 !
b11 (
1,
0+
0.
12
06
0)
1-
15
b101 $
b101 &
b1110 #
b1110 %
#15000
b10 !
b10 (
0,
03
0*
1.
02
16
0-
01
b1010 $
b1010 &
b1000 #
b1000 %
#20000
