$date
	Wed Nov 25 03:12:35 2020
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module t_sorting $end
$var wire 3 ! c_3 [2:0] $end
$var wire 3 " b_3 [2:0] $end
$var wire 3 # a_3 [2:0] $end
$var reg 3 $ a_0 [2:0] $end
$var reg 3 % b_0 [2:0] $end
$var reg 3 & c_0 [2:0] $end
$scope module test $end
$var wire 3 ' a_0 [2:0] $end
$var wire 3 ( a_2 [2:0] $end
$var wire 3 ) b_0 [2:0] $end
$var wire 3 * c_0 [2:0] $end
$var wire 3 + c_1 [2:0] $end
$var wire 3 , c_3 [2:0] $end
$var wire 1 - res_bc2 $end
$var wire 1 . res_ab3 $end
$var wire 1 / res_ab1 $end
$var wire 3 0 c_2 [2:0] $end
$var wire 3 1 b_3 [2:0] $end
$var wire 3 2 b_2 [2:0] $end
$var wire 3 3 b_1 [2:0] $end
$var wire 3 4 a_3 [2:0] $end
$var wire 3 5 a_1 [2:0] $end
$scope module ab_1 $end
$var wire 3 6 A [2:0] $end
$var wire 3 7 B [2:0] $end
$var wire 1 / Q $end
$var wire 3 8 state [2:0] $end
$var wire 3 9 rev_xor [2:0] $end
$var wire 3 : rev_B [2:0] $end
$var wire 3 ; bit [2:0] $end
$upscope $end
$scope module ab_3 $end
$var wire 3 < A [2:0] $end
$var wire 3 = B [2:0] $end
$var wire 1 . Q $end
$var wire 3 > state [2:0] $end
$var wire 3 ? rev_xor [2:0] $end
$var wire 3 @ rev_B [2:0] $end
$var wire 3 A bit [2:0] $end
$upscope $end
$scope module bc_2 $end
$var wire 3 B A [2:0] $end
$var wire 3 C B [2:0] $end
$var wire 1 - Q $end
$var wire 3 D state [2:0] $end
$var wire 3 E rev_xor [2:0] $end
$var wire 3 F rev_B [2:0] $end
$var wire 3 G bit [2:0] $end
$upscope $end
$scope module ma_1[0] $end
$var wire 1 H A $end
$var wire 1 I B $end
$var wire 1 J Q $end
$var wire 1 K not_select $end
$var wire 1 / select $end
$var wire 1 L tmp1 $end
$var wire 1 M tmp2 $end
$upscope $end
$scope module ma_1[1] $end
$var wire 1 N A $end
$var wire 1 O B $end
$var wire 1 P Q $end
$var wire 1 Q not_select $end
$var wire 1 / select $end
$var wire 1 R tmp1 $end
$var wire 1 S tmp2 $end
$upscope $end
$scope module ma_1[2] $end
$var wire 1 T A $end
$var wire 1 U B $end
$var wire 1 V Q $end
$var wire 1 W not_select $end
$var wire 1 / select $end
$var wire 1 X tmp1 $end
$var wire 1 Y tmp2 $end
$upscope $end
$scope module ma_3[0] $end
$var wire 1 Z A $end
$var wire 1 [ B $end
$var wire 1 \ Q $end
$var wire 1 ] not_select $end
$var wire 1 . select $end
$var wire 1 ^ tmp1 $end
$var wire 1 _ tmp2 $end
$upscope $end
$scope module ma_3[1] $end
$var wire 1 ` A $end
$var wire 1 a B $end
$var wire 1 b Q $end
$var wire 1 c not_select $end
$var wire 1 . select $end
$var wire 1 d tmp1 $end
$var wire 1 e tmp2 $end
$upscope $end
$scope module ma_3[2] $end
$var wire 1 f A $end
$var wire 1 g B $end
$var wire 1 h Q $end
$var wire 1 i not_select $end
$var wire 1 . select $end
$var wire 1 j tmp1 $end
$var wire 1 k tmp2 $end
$upscope $end
$scope module mb_1[0] $end
$var wire 1 l A $end
$var wire 1 m B $end
$var wire 1 n Q $end
$var wire 1 o not_select $end
$var wire 1 / select $end
$var wire 1 p tmp1 $end
$var wire 1 q tmp2 $end
$upscope $end
$scope module mb_1[1] $end
$var wire 1 r A $end
$var wire 1 s B $end
$var wire 1 t Q $end
$var wire 1 u not_select $end
$var wire 1 / select $end
$var wire 1 v tmp1 $end
$var wire 1 w tmp2 $end
$upscope $end
$scope module mb_1[2] $end
$var wire 1 x A $end
$var wire 1 y B $end
$var wire 1 z Q $end
$var wire 1 { not_select $end
$var wire 1 / select $end
$var wire 1 | tmp1 $end
$var wire 1 } tmp2 $end
$upscope $end
$scope module mb_2[0] $end
$var wire 1 ~ A $end
$var wire 1 !" B $end
$var wire 1 "" Q $end
$var wire 1 #" not_select $end
$var wire 1 - select $end
$var wire 1 $" tmp1 $end
$var wire 1 %" tmp2 $end
$upscope $end
$scope module mb_2[1] $end
$var wire 1 &" A $end
$var wire 1 '" B $end
$var wire 1 (" Q $end
$var wire 1 )" not_select $end
$var wire 1 - select $end
$var wire 1 *" tmp1 $end
$var wire 1 +" tmp2 $end
$upscope $end
$scope module mb_2[2] $end
$var wire 1 ," A $end
$var wire 1 -" B $end
$var wire 1 ." Q $end
$var wire 1 /" not_select $end
$var wire 1 - select $end
$var wire 1 0" tmp1 $end
$var wire 1 1" tmp2 $end
$upscope $end
$scope module mb_3[0] $end
$var wire 1 2" A $end
$var wire 1 3" B $end
$var wire 1 4" Q $end
$var wire 1 5" not_select $end
$var wire 1 . select $end
$var wire 1 6" tmp1 $end
$var wire 1 7" tmp2 $end
$upscope $end
$scope module mb_3[1] $end
$var wire 1 8" A $end
$var wire 1 9" B $end
$var wire 1 :" Q $end
$var wire 1 ;" not_select $end
$var wire 1 . select $end
$var wire 1 <" tmp1 $end
$var wire 1 =" tmp2 $end
$upscope $end
$scope module mb_3[2] $end
$var wire 1 >" A $end
$var wire 1 ?" B $end
$var wire 1 @" Q $end
$var wire 1 A" not_select $end
$var wire 1 . select $end
$var wire 1 B" tmp1 $end
$var wire 1 C" tmp2 $end
$upscope $end
$scope module mc_2[0] $end
$var wire 1 D" A $end
$var wire 1 E" B $end
$var wire 1 F" Q $end
$var wire 1 G" not_select $end
$var wire 1 - select $end
$var wire 1 H" tmp1 $end
$var wire 1 I" tmp2 $end
$upscope $end
$scope module mc_2[1] $end
$var wire 1 J" A $end
$var wire 1 K" B $end
$var wire 1 L" Q $end
$var wire 1 M" not_select $end
$var wire 1 - select $end
$var wire 1 N" tmp1 $end
$var wire 1 O" tmp2 $end
$upscope $end
$scope module mc_2[2] $end
$var wire 1 P" A $end
$var wire 1 Q" B $end
$var wire 1 R" Q $end
$var wire 1 S" not_select $end
$var wire 1 - select $end
$var wire 1 T" tmp1 $end
$var wire 1 U" tmp2 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0U"
0T"
0S"
0R"
0Q"
0P"
1O"
0N"
0M"
1L"
1K"
0J"
0I"
0H"
0G"
0F"
0E"
1D"
0C"
0B"
1A"
0@"
0?"
0>"
0="
0<"
1;"
0:"
09"
08"
07"
16"
15"
14"
03"
12"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
1&"
1%"
0$"
0#"
1""
1!"
0~
0}
0|
0{
0z
0y
0x
1w
0v
0u
1t
1s
0r
0q
0p
0o
0n
0m
0l
0k
0j
1i
0h
0g
0f
0e
0d
1c
0b
0a
0`
0_
0^
1]
0\
1[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
1N
0M
0L
0K
0J
0I
0H
b11 G
b110 F
b100 E
b10 D
b1 C
b10 B
b1 A
b110 @
b110 ?
b0 >
b1 =
b0 <
b10 ;
b111 :
b101 9
b10 8
b0 7
b10 6
b0 5
b0 4
b10 3
b1 2
b1 1
b10 0
1/
0.
1-
b10 ,
b1 +
b1 *
b0 )
b0 (
b10 '
b1 &
b0 %
b10 $
b0 #
b1 "
b10 !
$end
#30000
